#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ContextGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using Supido.Demo.Model;

namespace Supido.Demo.Model	
{
	public partial class EntitiesModel : OpenAccessContext, IEntitiesModelUnitOfWork
	{
		private static string connectionStringName = @"Supido_exampleConnection";
			
		private static BackendConfiguration backend = GetBackendConfiguration();
				
		private static MetadataSource metadataSource = XmlMetadataSource.FromAssemblyResource("EntitiesModel.rlinq");
		
		public EntitiesModel()
			:base(connectionStringName, backend, metadataSource)
		{ }
		
		public EntitiesModel(string connection)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntitiesModel(BackendConfiguration backendConfiguration)
			:base(connectionStringName, backendConfiguration, metadataSource)
		{ }
			
		public EntitiesModel(string connection, MetadataSource metadataSource)
			:base(connection, backend, metadataSource)
		{ }
		
		public EntitiesModel(string connection, BackendConfiguration backendConfiguration, MetadataSource metadataSource)
			:base(connection, backendConfiguration, metadataSource)
		{ }
			
		public IQueryable<User> Users 
		{
			get
			{
				return this.GetAll<User>();
			}
		}
		
		public IQueryable<TaskType> TaskTypes 
		{
			get
			{
				return this.GetAll<TaskType>();
			}
		}
		
		public IQueryable<Task> Tasks 
		{
			get
			{
				return this.GetAll<Task>();
			}
		}
		
		public IQueryable<Session> Sessions 
		{
			get
			{
				return this.GetAll<Session>();
			}
		}
		
		public IQueryable<Service> Services 
		{
			get
			{
				return this.GetAll<Service>();
			}
		}
		
		public IQueryable<Project> Projects 
		{
			get
			{
				return this.GetAll<Project>();
			}
		}
		
		public IQueryable<Department> Departments 
		{
			get
			{
				return this.GetAll<Department>();
			}
		}
		
		public IQueryable<Client> Clients 
		{
			get
			{
				return this.GetAll<Client>();
			}
		}
		
		public IQueryable<MetaEntity> MetaEntities 
		{
			get
			{
				return this.GetAll<MetaEntity>();
			}
		}
		
		public IQueryable<AuditTransacAction> AuditTransacActions 
		{
			get
			{
				return this.GetAll<AuditTransacAction>();
			}
		}
		
		public IQueryable<AuditTransac> AuditTransacs 
		{
			get
			{
				return this.GetAll<AuditTransac>();
			}
		}
		
		public static BackendConfiguration GetBackendConfiguration()
		{
			BackendConfiguration backend = new BackendConfiguration();
			backend.Backend = "MsSql";
			backend.ProviderName = "System.Data.SqlClient";
		
			CustomizeBackendConfiguration(ref backend);
		
			return backend;
		}
		
		/// <summary>
		/// Allows you to customize the BackendConfiguration of EntitiesModel.
		/// </summary>
		/// <param name="config">The BackendConfiguration of EntitiesModel.</param>
		static partial void CustomizeBackendConfiguration(ref BackendConfiguration config);
		
	}
	
	public interface IEntitiesModelUnitOfWork : IUnitOfWork
	{
		IQueryable<User> Users
		{
			get;
		}
		IQueryable<TaskType> TaskTypes
		{
			get;
		}
		IQueryable<Task> Tasks
		{
			get;
		}
		IQueryable<Session> Sessions
		{
			get;
		}
		IQueryable<Service> Services
		{
			get;
		}
		IQueryable<Project> Projects
		{
			get;
		}
		IQueryable<Department> Departments
		{
			get;
		}
		IQueryable<Client> Clients
		{
			get;
		}
		IQueryable<MetaEntity> MetaEntities
		{
			get;
		}
		IQueryable<AuditTransacAction> AuditTransacActions
		{
			get;
		}
		IQueryable<AuditTransac> AuditTransacs
		{
			get;
		}
	}
}
#pragma warning restore 1591
